name : CI/CD with Docker

on:
  push:
    branches: ['main', '/feature/**']
    tags:
      - '*'
  pull_request:
    branches: ['main']

permissions:
  contents: read
env:
  VERSION : ${{ github.ref_type=='tag' && github.ref_name || github.sha }}
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Setup MySQL
        uses: samin/mysql-action@v1
        with:
          character set server: 'utf8' 
          mysql database: board
          mysql user: ${{ secrets.MYSQL_USERNAME }}
          mysql password: ${{ secrets.MYSQL_PASSWORD }}

      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        with:
          arguments: build

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/gradle-wrapper.properties') }} # first search
          restore-keys: ${{ runner.os }}-gradle- # no hit, search

      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        with:
          arguments: build


      - name: Docker Build
        if: github.ref == 'refs/heads/main' || github.ref_type== 'tag'
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/board:$VERSION .
          docker push ${{ secrets.DOCKER_USERNAME }}/board:$VERSION
